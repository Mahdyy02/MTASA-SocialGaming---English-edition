raceStartMarker = {2836.5556640625, -1869.3505859375, 10.927423477173};

raceMarker = {
	{2841.3947753906, -1844.6730957031, 10.903319358826},
	{2845.0578613281, -1812.2995605469, 10.882705688477},
	{2859.2619628906, -1721.1893310547, 10.882705688477},
	{2904.751953125, -1571.4163818359, 10.875},
	{2924.62890625, -1395.8271484375, 11.046875},
	{2888.6389160156, -1151.4949951172, 10.875},
	{2886.587890625, -551.04187011719, 12.731342315674},
	{2714.9445800781, -321.06903076172, 27.242008209229},
	{2772.8842773438, 38.178070068359, 32.345386505127},
	{2681.1723632813, 317.54821777344, 20.985446929932},
	{1956.4317626953, 311.00531005859, 33.191780090332},
	{1765.9223632813, 338.91668701172, 19.003005981445},
	{1492.7487792969, 394.50112915039, 19.8828125},
	{1119.955078125, 573.33245849609, 19.8828125},
	{1119.955078125, 573.33245849609, 19.8828125},
	{961.08380126953, 386.87359619141, 19.8828125},
	{609.22735595703, 306.05361938477, 19.619579315186},
	{175.79695129395, 61.894237518311, 2.078125},
	{-198.18159484863, 237.64157104492, 12.078125},
	{-711.99664306641, 231.00975036621, 2.2409210205078},
	{-755.72253417969, 112.20868682861, 13.891855239868},
	{-674.18865966797, 87.783004760742, 24.800567626953},
	{-871.17138671875, -10.300490379333, 33.2265625},
	{-783.14300537109, -24.962295532227, 47.444225311279},
	{-671.50469970703, 4.2205410003662, 71.110107421875},
	{-828.66381835938, -118.70890045166, 62.638942718506},
	{-982.79345703125, -395.93008422852, 36.2734375},
	{-1226.9011230469, -767.74676513672, 63.897735595703},
	{-1763.8887939453, -579.99652099609, 16.3359375},
	{-1818.2147216797, -582.01080322266, 16.3359375},
	{-1808.3155517578, -755.51928710938, 32.569396972656},
	{-1789.1618652344, -1055.4615478516, 53.577278137207},
	{-1572.1333007813, -1436.1474609375, 41.147804260254},
	{-1564.3627929688, -1604.7668457031, 37.514846801758},
	{-1873.4246826172, -1756.8327636719, 29.215517044067},
	{-2102.5783691406, -2071.9155273438, 63.449882507324},
	{-2451.5085449219, -2295.9538574219, 14.67761516571},
	{-2592.8149414063, -2317.6767578125, 11.333488464355},
	{-2581.7770996094, -2483.7829589844, 19.521627426147},
	{-2495.2126464844, -2676.2763671875, 43.136001586914},
	{-2207.9343261719, -2760.2817382813, 35.511486053467},
	{-1958.3990478516, -2724.5122070313, 53.198600769043},
	{-1784.7335205078, -2675.5812988281, 52.793979644775},
	{-1564.8127441406, -2807.3791503906, 46.921875},
	{-1372.0870361328, -2931.8620605469, 47.283966064453},
	{-1183.658203125, -2866.8405761719, 67.71875},
	{-904.43560791016, -2871.5126953125, 65.076675415039},
	{-596.70056152344, -2784.6455078125, 49.227066040039},
	{-99.416641235352, -2873.1166992188, 39.187145233154},
	{-6.1074929237366, -2768.4645996094, 40.54674911499},
	{-12.21489906311, -2572.7534179688, 38.678657531738},
	{-199.28059387207, -2340.1108398438, 28.869331359863},
	{-337.19189453125, -2020.4224853516, 26.123300552368},
	{-275.60861206055, -1696.4422607422, 14.348030090332},
	{-66.66822052002, -1414.6827392578, 12.000350952148},
	{-34.314556121826, -1499.5200195313, 1.9938368797302},
	{-90.314476013184, -1499.5336914063, 2.6953125},
	{52.042079925537, -1538.8948974609, 5.1348695755005},
	{196.06182861328, -1635.1408691406, 14.226476669312},
	{313.01541137695, -1711.9364013672, 6.6685147285461},
	{582.16961669922, -1737.7327880859, 13.112686157227},
	{910.52294921875, -1787.4671630859, 13.3828125},
	{1046.197265625, -1845.8553466797, 13.3984375},
	{1035.5189208984, -2066.0974121094, 12.925624847412},
	{1027.0725097656, -2251.2275390625, 12.924020767212},
	{1130.9720458984, -2399.513671875, 11.191836357117},
	{1316.7352294922, -2464.3481445313, 7.65625},
	{1321.6401367188, -2518.2163085938, 13.375},
	{1386.3513183594, -2667.9572753906, 13.375},
	{1470.0574951172, -2684.9765625, 11.959544181824},
	{1984.6348876953, -2685.1606445313, 8.977258682251},
	{2163.9836425781, -2619.1052246094, 13.375},
	{2186.5258789063, -2401.1708984375, 13.375},
	{2372.865234375, -2203.3056640625, 13.375},
	{2519.8745117188, -2170.6696777344, 13.375},
	{2763.9252929688, -2162.8557128906, 10.93616104126},
	{2837.9326171875, -2048.8488769531, 10.9375},
	
	
	
	
}


function secondsToTimeDesc( seconds )
	if seconds then
		local results = {}
		local sec = ( seconds %60 )
		local min = math.floor ( ( seconds % 3600 ) /60 )
		local hou = math.floor ( ( seconds % 86400 ) /3600 )
		local day = math.floor ( seconds /86400 )

		
		if day > 0 and day < 10 then table.insert( results, day .. ( day == 1 and " day" or " days" ) ) 
		elseif day > 0  then table.insert( results, day .. ( day == 1 and "" or "" ) ) end
			
		if hou >= 0 and hou < 10 then table.insert( results, "0"..hou .. ( hou == 1 and "" or "" ) ) 
		elseif hou > 0  then table.insert( results, hou .. ( hou == 1 and "" or "" ) ) end
		
		if min >= 0 and min < 10 then table.insert( results, "0"..min .. ( min == 1 and "" or "" ) ) 
		elseif min > 0  then table.insert( results, min .. ( hou == 1 and "" or "" ) ) end
		
		if sec >= 0 and sec < 10 then table.insert( results, "0"..sec .. ( sec == 1 and "" or "" ) ) 
		elseif sec > 0  then table.insert( results, sec .. ( sec == 1 and "" or "" ) ) end
		
		return string.reverse ( table.concat ( results, ":" ):reverse():gsub(":", ":", 1 ) )
	end
	return ""
end